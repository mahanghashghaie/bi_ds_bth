-- This script:
--    DROPS any tables with mentioned names from the aol schema (in order not to have a mess)
--    CREATES/recreates the schema 'BI_Tasks' (in order to have all the task related tables together)
--    CREATES/recreates the tables for raw data files
--    POPULATES the tables with data


-- You have to:
--    get the files from our github repository (rupali-datasets.zip)
--    replace <file_path> in the import statements with your path to the files
--    run the script in/from exasol console


-- Note: you may see repeated drop statements for the same tables. They're there just in order to
-- execute a code snippet without having to search for its counterparts in the whole script ;)


-- drop the tasks related tables from the aol_schema if any
drop table if exists AOL_SCHEMA.zika;
drop table if exists AOL_SCHEMA.malaria;
drop table if exists AOL_SCHEMA.h5n1;
drop table if exists AOL_SCHEMA.lgbt;
drop table if exists AOL_SCHEMA.cancer;


-- create a new schema in the exasol database for our BI tasks
-- in order to drop a non-empty schema we NEED to first drop all its contents
drop table if exists BI_Tasks.zika;
drop table if exists BI_Tasks.malaria;
drop table if exists BI_Tasks.h5n1;
drop table if exists BI_Tasks.lgbt;
drop table if exists BI_Tasks.cancer;
drop table if exists BI_Tasks.cdc;

drop schema if exists BI_Tasks;
create schema BI_Tasks;


-- create & populate all the tables

-- ZIKA
drop table if exists BI_Tasks.zika;
create table BI_Tasks.zika
(
  GLOBALEVENTID DECIMAL(18),
  SQLDATE DECIMAL(18),
  MONTHYEAR DECIMAL(18),
  YEAR_ DECIMAL(18),
  FRACTIONDATE DOUBLE,
  ACTOR1CODE VARCHAR(2000000) UTF8,
  ACTOR1NAME VARCHAR(2000000) UTF8,
  ACTOR1COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR1ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE3CODE VARCHAR(2000000) UTF8,
  ACTOR2CODE VARCHAR(2000000) UTF8,
  ACTOR2NAME VARCHAR(2000000) UTF8,
  ACTOR2COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR2ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE3CODE VARCHAR(2000000) UTF8,
  ISROOTEVENT DECIMAL(18),
  EVENTCODE DECIMAL(18),
  EVENTBASECODE DECIMAL(18),
  EVENTROOTCODE DECIMAL(18),
  QUADCLASS DECIMAL(18),
  GOLDSTEINSCALE DOUBLE,
  NUMMENTIONS DECIMAL(18),
  NUMSOURCES DECIMAL(18),
  NUMARTICLES DECIMAL(18),
  AVGTONE DOUBLE,
  ACTOR1GEO_TYPE DECIMAL(18),
  ACTOR1GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR1GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR1GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR1GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTOR2GEO_TYPE DECIMAL(18),
  ACTOR2GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR2GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR2GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR2GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTIONGEO_TYPE DECIMAL(18),
  ACTIONGEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTIONGEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_LAT VARCHAR(2000000) UTF8,
  ACTIONGEO_LONG VARCHAR(2000000) UTF8,
  ACTIONGEO_FEATUREID VARCHAR(2000000) UTF8,
  DATEADDED DOUBLE,
  SOURCEURL VARCHAR(2000000) UTF8
);

IMPORT INTO BI_Tasks.zika
FROM LOCAL CSV FILE '<file_path>/zika.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'LF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;

-- CDC data for zika

## create table

drop table if exists BI_Tasks.cdc;
create table BI_Tasks.cdc
(
  YEAR_                                    DECIMAL(18),
  REGION_NAME                              VARCHAR(2000000) UTF8,
  SYMPTOMATIC_DISEASE_CASES_NO             DECIMAL(18),
  SYMPTOMATIC_DISEASE_CASES_PERCENT        DECIMAL(18),
  PRESUMPTIVE_VIREMIC_BLOOD_DONORS_NO      DECIMAL(18),
  PRESUMPTIVE_VIREMIC_BLOOD_DONORS_PERCENT DECIMAL(18)
);

IMPORT INTO BI_Tasks.cdc
FROM LOCAL CSV FILE 'C:/Users/rupal/Google Drive/Beuth Uni/BI/bi_ds_bth/cdc.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'CRLF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;

-- ECDC data for zika

## create table

drop table if exists BI_Tasks.ecdc;
create table BI_Tasks.ecdc
(
  HEALTHTOPIC VARCHAR(2000000) UTF8,
  POPULATION  VARCHAR(2000000) UTF8,
  INDICATOR_  VARCHAR(2000000) UTF8,
  UNIT        VARCHAR(2000000) UTF8,
  TIME_       VARCHAR(2000000) UTF8,
  REGIONCODE  VARCHAR(2000000) UTF8,
  REGIONNAME  VARCHAR(2000000) UTF8,
  NUMVALUE    VARCHAR(2000000) UTF8,
  TXTVALUE    VARCHAR(2000000) UTF8
)


IMPORT INTO BI_Tasks.ecdc
FROM LOCAL CSV FILE '<file_path>/ecdc.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'LF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;

-- MALARIA
drop table if exists BI_Tasks.malaria;
create table BI_Tasks.malaria
(
  GLOBALEVENTID DECIMAL(18),
  SQLDATE DECIMAL(18),
  MONTHYEAR DECIMAL(18),
  YEAR_ DECIMAL(18),
  FRACTIONDATE DOUBLE,
  ACTOR1CODE VARCHAR(2000000) UTF8,
  ACTOR1NAME VARCHAR(2000000) UTF8,
  ACTOR1COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR1ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE3CODE VARCHAR(2000000) UTF8,
  ACTOR2CODE VARCHAR(2000000) UTF8,
  ACTOR2NAME VARCHAR(2000000) UTF8,
  ACTOR2COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR2ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE3CODE VARCHAR(2000000) UTF8,
  ISROOTEVENT DECIMAL(18),
  EVENTCODE DECIMAL(18),
  EVENTBASECODE DECIMAL(18),
  EVENTROOTCODE DECIMAL(18),
  QUADCLASS DECIMAL(18),
  GOLDSTEINSCALE DOUBLE,
  NUMMENTIONS DECIMAL(18),
  NUMSOURCES DECIMAL(18),
  NUMARTICLES DECIMAL(18),
  AVGTONE DOUBLE,
  ACTOR1GEO_TYPE DECIMAL(18),
  ACTOR1GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR1GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR1GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR1GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTOR2GEO_TYPE DECIMAL(18),
  ACTOR2GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR2GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR2GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR2GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTIONGEO_TYPE DECIMAL(18),
  ACTIONGEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTIONGEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_LAT VARCHAR(2000000) UTF8,
  ACTIONGEO_LONG VARCHAR(2000000) UTF8,
  ACTIONGEO_FEATUREID VARCHAR(2000000) UTF8,
  DATEADDED DOUBLE,
  SOURCEURL VARCHAR(2000000) UTF8
);

IMPORT INTO BI_Tasks.malaria
FROM LOCAL CSV FILE '<file_path>/malaria.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'LF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;


-- H5N1
drop table if exists BI_Tasks.h5n1;
create table BI_Tasks.h5n1
(
  GLOBALEVENTID DECIMAL(18),
  SQLDATE DECIMAL(18),
  MONTHYEAR DECIMAL(18),
  YEAR_ DECIMAL(18),
  FRACTIONDATE DOUBLE,
  ACTOR1CODE VARCHAR(2000000) UTF8,
  ACTOR1NAME VARCHAR(2000000) UTF8,
  ACTOR1COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR1ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE3CODE VARCHAR(2000000) UTF8,
  ACTOR2CODE VARCHAR(2000000) UTF8,
  ACTOR2NAME VARCHAR(2000000) UTF8,
  ACTOR2COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR2ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE3CODE VARCHAR(2000000) UTF8,
  ISROOTEVENT DECIMAL(18),
  EVENTCODE DECIMAL(18),
  EVENTBASECODE DECIMAL(18),
  EVENTROOTCODE DECIMAL(18),
  QUADCLASS DECIMAL(18),
  GOLDSTEINSCALE DOUBLE,
  NUMMENTIONS DECIMAL(18),
  NUMSOURCES DECIMAL(18),
  NUMARTICLES DECIMAL(18),
  AVGTONE DOUBLE,
  ACTOR1GEO_TYPE DECIMAL(18),
  ACTOR1GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR1GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR1GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR1GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTOR2GEO_TYPE DECIMAL(18),
  ACTOR2GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR2GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR2GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR2GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTIONGEO_TYPE DECIMAL(18),
  ACTIONGEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTIONGEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_LAT VARCHAR(2000000) UTF8,
  ACTIONGEO_LONG VARCHAR(2000000) UTF8,
  ACTIONGEO_FEATUREID VARCHAR(2000000) UTF8,
  DATEADDED DOUBLE,
  SOURCEURL VARCHAR(2000000) UTF8
);

IMPORT INTO BI_Tasks.h5n1
FROM LOCAL CSV FILE '<file_path>/influenza.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'LF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;


-- LGBT
drop table if exists BI_Tasks.lgbt;
create table BI_Tasks.lgbt
(
  GLOBALEVENTID DECIMAL(18),
  SQLDATE DECIMAL(18),
  MONTHYEAR DECIMAL(18),
  YEAR_ DECIMAL(18),
  FRACTIONDATE DOUBLE,
  ACTOR1CODE VARCHAR(2000000) UTF8,
  ACTOR1NAME VARCHAR(2000000) UTF8,
  ACTOR1COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR1ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE3CODE VARCHAR(2000000) UTF8,
  ACTOR2CODE VARCHAR(2000000) UTF8,
  ACTOR2NAME VARCHAR(2000000) UTF8,
  ACTOR2COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR2ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE3CODE VARCHAR(2000000) UTF8,
  ISROOTEVENT DECIMAL(18),
  EVENTCODE DECIMAL(18),
  EVENTBASECODE DECIMAL(18),
  EVENTROOTCODE DECIMAL(18),
  QUADCLASS DECIMAL(18),
  GOLDSTEINSCALE DOUBLE,
  NUMMENTIONS DECIMAL(18),
  NUMSOURCES DECIMAL(18),
  NUMARTICLES DECIMAL(18),
  AVGTONE DOUBLE,
  ACTOR1GEO_TYPE DECIMAL(18),
  ACTOR1GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR1GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR1GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR1GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTOR2GEO_TYPE DECIMAL(18),
  ACTOR2GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR2GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR2GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR2GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTIONGEO_TYPE DECIMAL(18),
  ACTIONGEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTIONGEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_LAT VARCHAR(2000000) UTF8,
  ACTIONGEO_LONG VARCHAR(2000000) UTF8,
  ACTIONGEO_FEATUREID VARCHAR(2000000) UTF8,
  DATEADDED DOUBLE,
  SOURCEURL VARCHAR(2000000) UTF8
);

IMPORT INTO BI_Tasks.lgbt
FROM LOCAL CSV FILE '<file_path>/lgbt.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'LF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;


-- CANCER
drop table if exists BI_Tasks.cancer;
create table BI_Tasks.cancer
(
  GLOBALEVENTID DECIMAL(18),
  SQLDATE DECIMAL(18),
  MONTHYEAR DECIMAL(18),
  YEAR_ DECIMAL(18),
  FRACTIONDATE DOUBLE,
  ACTOR1CODE VARCHAR(2000000) UTF8,
  ACTOR1NAME VARCHAR(2000000) UTF8,
  ACTOR1COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR1ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR1RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR1TYPE3CODE VARCHAR(2000000) UTF8,
  ACTOR2CODE VARCHAR(2000000) UTF8,
  ACTOR2NAME VARCHAR(2000000) UTF8,
  ACTOR2COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2KNOWNGROUPCODE VARCHAR(2000000) UTF8,
  ACTOR2ETHNICCODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION1CODE VARCHAR(2000000) UTF8,
  ACTOR2RELIGION2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE1CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE2CODE VARCHAR(2000000) UTF8,
  ACTOR2TYPE3CODE VARCHAR(2000000) UTF8,
  ISROOTEVENT DECIMAL(18),
  EVENTCODE DECIMAL(18),
  EVENTBASECODE DECIMAL(18),
  EVENTROOTCODE DECIMAL(18),
  QUADCLASS DECIMAL(18),
  GOLDSTEINSCALE DOUBLE,
  NUMMENTIONS DECIMAL(18),
  NUMSOURCES DECIMAL(18),
  NUMARTICLES DECIMAL(18),
  AVGTONE DOUBLE,
  ACTOR1GEO_TYPE DECIMAL(18),
  ACTOR1GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR1GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR1GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR1GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR1GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTOR2GEO_TYPE DECIMAL(18),
  ACTOR2GEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTOR2GEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTOR2GEO_LAT VARCHAR(2000000) UTF8,
  ACTOR2GEO_LONG VARCHAR(2000000) UTF8,
  ACTOR2GEO_FEATUREID VARCHAR(2000000) UTF8,
  ACTIONGEO_TYPE DECIMAL(18),
  ACTIONGEO_FULLNAME VARCHAR(2000000) UTF8,
  ACTIONGEO_COUNTRYCODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM1CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_ADM2CODE VARCHAR(2000000) UTF8,
  ACTIONGEO_LAT VARCHAR(2000000) UTF8,
  ACTIONGEO_LONG VARCHAR(2000000) UTF8,
  ACTIONGEO_FEATUREID VARCHAR(2000000) UTF8,
  DATEADDED DOUBLE,
  SOURCEURL VARCHAR(2000000) UTF8
);

IMPORT INTO BI_Tasks.cancer
FROM LOCAL CSV FILE '<file_path>/cancer.csv'
ENCODING = 'UTF-8'
ROW SEPARATOR = 'LF'
COLUMN SEPARATOR = ','
COLUMN DELIMITER = '"'
SKIP = 1
REJECT LIMIT 0;
